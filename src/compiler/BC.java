package compiler;

// Java VM Bytecode instructions
public enum BC {

	nop(0x0, "nop", 0, 0),
	aconst_null(0x1, "aconst_null", 0, 1),
	iconst_m1(0x2, "iconst_m1", 0, 1),
	iconst_0(0x3, "iconst_0", 0, 1),
	iconst_1(0x4, "iconst_1", 0, 1),
	iconst_2(0x5, "iconst_2", 0, 1),
	iconst_3(0x6, "iconst_3", 0, 1),
	iconst_4(0x7, "iconst_4", 0, 1),
	iconst_5(0x8, "iconst_5", 0, 1),
	lconst_0(0x9, "lconst_0", 0, 1),
	lconst_1(0x0a, "lconst_1", 0, 1),
	fconst_0(0x0b, "fconst_0", 0, 1),
	fconst_1(0x0c, "fconst_1", 0, 1),
	fconst_2(0x0d, "fconst_2", 0, 1),
	dconst_0(0x0e, "dconst_0", 0, 1),
	dconst_1(0x0f, "dconst_1", 0, 1),
	bipush(0x10, "bipush", 0, 1),
	sipush(0x11, "sipush", 0, 1),
	ldc(0x12, "ldc", 0, 1),
	ldc_w(0x13, "ldc_w", 0, 1),
	ldc2_w(0x14, "ldc2_w", 0, 1),
	iload(0x15, "iload", 0, 1),
	lload(0x16, "lload", 0, 1),
	fload(0x17, "fload", 0, 1),
	dload(0x18, "dload", 0, 1),
	aload(0x19, "aload", 0, 1),
	iload_0(0x1a, "iload_0", 0, 1),
	iload_1(0x1b, "iload_1", 0, 1),
	iload_2(0x1c, "iload_2", 0, 1),
	iload_3(0x1d, "iload_3", 0, 1),
	lload_0(0x1e, "lload_0", 0, 1),
	lload_1(0x1f, "lload_1", 0, 1),
	lload_2(0x20, "lload_2", 0, 1),
	lload_3(0x21, "lload_3", 0, 1),
	fload_0(0x22, "fload_0", 0, 1),
	fload_1(0x23, "fload_1", 0, 1),
	fload_2(0x24, "fload_2", 0, 1),
	fload_3(0x25, "fload_3", 0, 1),
	dload_0(0x26, "dload_0", 0, 1),
	dload_1(0x27, "dload_1", 0, 1),
	dload_2(0x28, "dload_2", 0, 1),
	dload_3(0x29, "dload_3", 0, 1),
	aload_0(0x2a, "aload_0", 0, 1),
	aload_1(0x2b, "aload_1", 0, 1),
	aload_2(0x2c, "aload_2", 0, 1),
	aload_3(0x2d, "aload_3", 0, 1),
	iaload(0x2e, "iaload", 2, 1),
	laload(0x2f, "laload", 2, 1),
	faload(0x30, "faload", 2, 1),
	daload(0x31, "daload", 2, 1),
	aaload(0x32, "aaload", 2, 1),
	baload(0x33, "baload", 2, 1),
	caload(0x34, "caload", 2, 1),
	saload(0x35, "saload", 2, 1),
	istore(0x36, "istore", 2, 1),
	lstore(0x37, "lstore", 2, 1),
	fstore(0x38, "fstore", 2, 1),
	dstore(0x39, "dstore", 2, 1),
	astore(0x3a, "astore", 2, 1),
	istore_0(0x3b, "istore_0", 1, 0),
	istore_1(0x3c, "istore_1", 1, 0),
	istore_2(0x3d, "istore_2", 1, 0),
	istore_3(0x3e, "istore_3", 1, 0),
	lstore_0(0x3f, "lstore_0", 1, 0),
	lstore_1(0x40, "lstore_1", 1, 0),
	lstore_2(0x41, "lstore_2", 1, 0),
	lstore_3(0x42, "lstore_3", 1, 0),
	fstore_0(0x43, "fstore_0", 1, 0),
	fstore_1(0x44, "fstore_1", 1, 0),
	fstore_2(0x45, "fstore_2", 1, 0),
	fstore_3(0x46, "fstore_3", 1, 0),
	dstore_0(0x47, "dstore_0", 1, 0),
	dstore_1(0x48, "dstore_1", 1, 0),
	dstore_2(0x49, "dstore_2", 1, 0),
	dstore_3(0x4a, "dstore_3", 1, 0),
	astore_0(0x4b, "astore_0", 1, 0),
	astore_1(0x4c, "astore_1", 1, 0),
	astore_2(0x4d, "astore_2", 1, 0),
	astore_3(0x4e, "astore_3", 1, 0),
	iastore(0x4f, "iastore", 3, 0),
	lastore(0x50, "lastore", 3, 0),
	fastore(0x51, "fastore", 3, 0),
	dastore(0x52, "dastore", 3, 0),
	aastore(0x53, "aastore", 3, 0),
	bastore(0x54, "bastore", 3, 0),
	castore(0x55, "castore", 3, 0),
	sastore(0x56, "sastore", 3, 0),
	pop(0x57, "pop", 1, 0),
	pop2(0x58, "pop2", 2, 0),
	dup(0x59, "dup", 1, 2),
	dup_x1(0x5a, "dup_x1", 2, 3),
	dup_x2(0x5b, "dup_x2", 3, 4),
	dup2(0x5c, "dup2", 2, 4),
	dup2_x1(0x5d, "dup2_x1", 3, 5),
	dup2_x2(0x5e, "dup2_x2", 4, 6),
	swap(0x5f, "swap", 2, 2),
	iadd(0x60, "iadd", 2, 1),
	ladd(0x61, "ladd", 2, 1),
	fadd(0x62, "fadd", 2, 1),
	dadd(0x63, "dadd", 2, 1),
	isub(0x64, "isub", 2, 1),
	lsub(0x65, "lsub", 2, 1),
	fsub(0x66, "fsub", 2, 1),
	dsub(0x67, "dsub", 2, 1),
	imul(0x68, "imul", 2, 1),
	lmul(0x69, "lmul", 2, 1),
	fmul(0x6a, "fmul", 2, 1),
	dmul(0x6b, "dmul", 2, 1),
	idiv(0x6c, "idiv", 2, 1),
	ldiv(0x6d, "ldiv", 2, 1),
	fdiv(0x6e, "fdiv", 2, 1),
	ddiv(0x6f, "ddiv", 2, 1),
	irem(0x70, "irem", 2, 1),
	lrem(0x71, "lrem", 2, 1),
	frem(0x72, "frem", 2, 1),
	drem(0x73, "drem", 2, 1),
	ineg(0x74, "ineg", 1, 1),
	lneg(0x75, "lneg", 1, 1),
	fneg(0x76, "fneg", 1, 1),
	dneg(0x77, "dneg", 1, 1),
	ishl(0x78, "ishl", 2, 1),
	lshl(0x79, "lshl", 2, 1),
	ishr(0x7a, "ishr", 2, 1),
	lshr(0x7b, "lshr", 2, 1),
	iushr(0x7c, "iushr", 2, 1),
	lushr(0x7d, "lushr", 2, 1),
	iand(0x7e, "iand", 2, 1),
	land(0x7f, "land", 2, 1),
	ior(0x80, "ior", 2, 1),
	lor(0x81, "lor", 2, 1),
	ixor(0x82, "ixor", 2, 1),
	lxor(0x83, "lxor", 2, 1),
	iinc(0x84, "iinc", 0, 0),
	i2l(0x85, "i2l", 1, 1),
	i2f(0x86, "i2f", 1, 1),
	i2d(0x87, "i2d", 1, 1),
	l2i(0x88, "l2i", 1, 1),
	l2f(0x89, "l2f", 1, 1),
	l2d(0x8a, "l2d", 1, 1),
	f2i(0x8b, "f2i", 1, 1),
	f2l(0x8c, "f2l", 1, 1),
	f2d(0x8d, "f2d", 1, 1),
	d2i(0x8e, "d2i", 1, 1),
	d2l(0x8f, "d2l", 1, 1),
	d2f(0x90, "d2f", 1, 1),
	i2b(0x91, "i2b", 1, 1),
	i2c(0x92, "i2c", 1, 1),
	i2s(0x93, "i2s", 1, 1),
	lcmp(0x94, "lcmp", 2, 1),
	fcmpl(0x95, "fcmpl", 2, 1),
	fcmpg(0x96, "fcmpg", 2, 1),
	dcmpl(0x97, "dcmpl", 2, 1),
	dcmpg(0x98, "dcmpg", 2, 1),
	ifeq(0x99, "ifeq", 1, 0),
	ifne(0x9a, "ifne", 1, 0),
	iflt(0x9b, "iflt", 1, 0),
	ifge(0x9c, "ifge", 1, 0),
	ifgt(0x9d, "ifgt", 1, 0),
	ifle(0x9e, "ifle", 1, 0),
	if_icmpeq(0x9f, "if_icmpeq", 2, 0),
	if_icmpne(0xa0, "if_icmpne", 2, 0),
	if_icmplt(0xa1, "if_icmplt", 2, 0),
	if_icmpge(0xa2, "if_icmpge", 2, 0),
	if_icmpgt(0xa3, "if_icmpgt", 2, 0),
	if_icmple(0xa4, "if_icmple", 2, 0),
	if_acmpeq(0xa5, "if_acmpeq", 2, 0),
	if_acmpne(0xa6, "if_acmpne", 2, 0),
	goto_(0xa7, "goto", 0, 0),
	jsr(0xa8, "jsr", 0, 1),
	ret(0xa9, "ret", 0, 0),
	tableswitch(0xaa, "tableswitch", 1, 0),
	lookupswitch(0xab, "lookupswitch", 1, 0),
	ireturn(0xac, "ireturn", 1, 0),
	lreturn(0xad, "lreturn", 1, 0),
	freturn(0xae, "freturn", 1, 0),
	dreturn(0xaf, "dreturn", 1, 0),
	areturn(0xb0, "areturn", 1, 0),
	return_(0xb1, "return", 0, 0),
	getstatic(0xb2, "getstatic", 0, 1),
	putstatic(0xb3, "putstatic", 1, 0),
	getfield(0xb4, "getfield", 1, 1),
	putfield(0xb5, "putfield", 2, 0),
	invokevirtual(0xb6, "invokevirtual", -2, 0),
	invokespecial(0xb7, "invokespecial", -2, 0),
	invokestatic(0xb8, "invokestatic", -1, 0),
	invokeinterface(0xb9, "invokeinterface", -2, 0),
	invokedynamic(0xba, "invokedynamic", -1, 0),
	new_(0xbb, "new", 0, 1),
	newarray(0xbc, "newarray", 1, 1),
	anewarray(0xbd, "anewarray", 1, 1),
	arraylength(0xbe, "arraylength", 1, 1),
	athrow(0xbf, "athrow", 1, 1),
	checkcast(0xc0, "checkcast", 1, 1),
	instanceof_(0xc1, "instanceof", 1, 1),
	monitorenter(0xc2, "monitorenter", 1, 0),
	monitorexit(0xc3, "monitorexit", 1, 0),
	wide(0xc4, "wide", -1, -1),
	multianewarray(0xc5, "multianewarray", -2, 1),
	ifnull(0xc6, "ifnull", 1, 0),
	ifnonnull(0xc7, "ifnonnull", 1, 0),
	goto_w(0xc8, "goto_w", 0, 0),
	jsr_w(0xc9, "jsr_w", 0, 1);

	public final int opCode;
	public final String id;
	public final int stackIn, stackOut;

	private BC(int opCode, String id, int stackIn, int stackOut) {
		this.opCode = opCode;
		this.id = id;
		this.stackIn = stackIn;
		this.stackOut = stackOut;
	}

	@Override
	public String toString() {
		return id;
	}
}
